package tn.ministere.entity;

// Generated 26 mai 2014 14:49:29 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Organisme generated by hbm2java
 */
@Entity
@Table(name = "organisme", catalog = "ministere")
public class Organisme implements java.io.Serializable {

	private String codeOrg;
	private TypeOrganisme typeOrganisme;
	private String libelleOrg;
	private String alibelleOrg;
	private String abreLibOrg;
	private String respOrg;
	private String arespOrg;
	private String adresseOrg;
	private String aadresseOrg;
	private Set<Grade> grades = new HashSet<Grade>(0);
	private List<AvoirBudorg> avoirBudorgs;
	private Set<Categorie> categories = new HashSet<Categorie>(0);
	private Set<Mission> missions = new HashSet<Mission>(0);
	private Set<Fonction> fonctions = new HashSet<Fonction>(0);
	private Set<Projet> projets = new HashSet<Projet>(0);

	public Organisme() {
	}

	public Organisme(String codeOrg, TypeOrganisme typeOrganisme) {
		this.codeOrg = codeOrg;
		this.typeOrganisme = typeOrganisme;
	}

	public Organisme(String codeOrg, TypeOrganisme typeOrganisme,
			String libelleOrg, String alibelleOrg, String abreLibOrg,
			String respOrg, String arespOrg, String adresseOrg,
			String aadresseOrg, Set<Grade> grades,
			List<AvoirBudorg> avoirBudorgs, Set<Categorie> categories,
			Set<Mission> missions, Set<Fonction> fonctions, Set<Projet> projets) {
		this.codeOrg = codeOrg;
		this.typeOrganisme = typeOrganisme;
		this.libelleOrg = libelleOrg;
		this.alibelleOrg = alibelleOrg;
		this.abreLibOrg = abreLibOrg;
		this.respOrg = respOrg;
		this.arespOrg = arespOrg;
		this.adresseOrg = adresseOrg;
		this.aadresseOrg = aadresseOrg;
		this.grades = grades;
		this.avoirBudorgs = avoirBudorgs;
		this.categories = categories;
		this.missions = missions;
		this.fonctions = fonctions;
		this.projets = projets;
	}

	@Id
	@Column(name = "CODE_ORG", unique = true, nullable = false, length = 6)
	public String getCodeOrg() {
		return this.codeOrg;
	}

	public void setCodeOrg(String codeOrg) {
		this.codeOrg = codeOrg;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CODE_TYPE_ORGANISME", nullable = false)
	public TypeOrganisme getTypeOrganisme() {
		return this.typeOrganisme;
	}

	public void setTypeOrganisme(TypeOrganisme typeOrganisme) {
		this.typeOrganisme = typeOrganisme;
	}

	@Column(name = "LIBELLE_ORG", length = 60)
	public String getLibelleOrg() {
		return this.libelleOrg;
	}

	public void setLibelleOrg(String libelleOrg) {
		this.libelleOrg = libelleOrg;
	}

	@Column(name = "ALIBELLE_ORG", length = 120)
	public String getAlibelleOrg() {
		return this.alibelleOrg;
	}

	public void setAlibelleOrg(String alibelleOrg) {
		this.alibelleOrg = alibelleOrg;
	}

	@Column(name = "ABRE_LIB_ORG", length = 20)
	public String getAbreLibOrg() {
		return this.abreLibOrg;
	}

	public void setAbreLibOrg(String abreLibOrg) {
		this.abreLibOrg = abreLibOrg;
	}

	@Column(name = "RESP_ORG", length = 40)
	public String getRespOrg() {
		return this.respOrg;
	}

	public void setRespOrg(String respOrg) {
		this.respOrg = respOrg;
	}

	@Column(name = "ARESP_ORG", length = 80)
	public String getArespOrg() {
		return this.arespOrg;
	}

	public void setArespOrg(String arespOrg) {
		this.arespOrg = arespOrg;
	}

	@Column(name = "ADRESSE_ORG", length = 100)
	public String getAdresseOrg() {
		return this.adresseOrg;
	}

	public void setAdresseOrg(String adresseOrg) {
		this.adresseOrg = adresseOrg;
	}

	@Column(name = "AADRESSE_ORG", length = 200)
	public String getAadresseOrg() {
		return this.aadresseOrg;
	}

	public void setAadresseOrg(String aadresseOrg) {
		this.aadresseOrg = aadresseOrg;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organisme")
	public Set<Grade> getGrades() {
		return this.grades;
	}

	public void setGrades(Set<Grade> grades) {
		this.grades = grades;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "organisme")
	@Fetch(value = FetchMode.SUBSELECT)
	public List<AvoirBudorg> getAvoirBudorgs() {
		return this.avoirBudorgs;
	}

	public void setAvoirBudorgs(List<AvoirBudorg> avoirBudorgs) {
		this.avoirBudorgs = avoirBudorgs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organisme")
	public Set<Categorie> getCategories() {
		return this.categories;
	}

	public void setCategories(Set<Categorie> categories) {
		this.categories = categories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organisme")
	public Set<Mission> getMissions() {
		return this.missions;
	}

	public void setMissions(Set<Mission> missions) {
		this.missions = missions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organisme")
	public Set<Fonction> getFonctions() {
		return this.fonctions;
	}

	public void setFonctions(Set<Fonction> fonctions) {
		this.fonctions = fonctions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organisme")
	public Set<Projet> getProjets() {
		return this.projets;
	}

	public void setProjets(Set<Projet> projets) {
		this.projets = projets;
	}

}
